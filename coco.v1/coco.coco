DATA Start WITH { String translate() } 
    = StartImpl(List<DataTypeDef> datatypedefs) {\String output = "import java.util.*;\nimport java.util.HashMap;\naimport java.util.Map.Entry;\nimport\njava.util.List;\nimport java.util.ArrayList;\nabstract class AST{}"; for(DataTypeDef d: datatypedefs){ output += d.translate(); } return output;}
;

DATA DataTypeDef WITH { String translate() }
    =  DataTypeDefImpl(String dataTypeName, String functionHead, List<Alternative> alternatives) {  return output;}
;

DATA Alternative WITH { String translate(AST parent)}
    = AlternativeImpl(String constructor, List<Argument> arguments,  String code)
        {retrun output;}
;

DATA Argument WITH {String translate()}
    = ArgumentImpl(String type, String name) {return type + " " + name; }
;

